// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Cierre {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  trabajador  String
  fechaInicio DateTime     @default(now())
  fechaFin    DateTime?
  completado  Boolean      @default(false)
  tareas      Tarea[]
  ticketFotos TicketFoto[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("cierres")
}

model Tarea {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre     String
  duracion   Int      // en minutos
  completada Boolean  @default(false)
  cierreId   String   @db.ObjectId
  cierre     Cierre   @relation(fields: [cierreId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("tareas")
}

model TicketFoto {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cierreId  String   @db.ObjectId
  cierre    Cierre   @relation(fields: [cierreId], references: [id], onDelete: Cascade)
  turno     String   // "mañana" o "tarde"
  url       String   // URL de la imagen en Cloudinary
  publicId  String   // ID público de Cloudinary para eliminación
  timestamp DateTime @default(now())
  trabajador String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ticket_fotos")
}
